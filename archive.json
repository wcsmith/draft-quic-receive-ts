{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-04T01:36:38.868165+00:00",
  "repo": "wcsmith/draft-quic-receive-ts",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOGIUVps4-YZT7",
      "title": "Should Timestamps have to be in order?",
      "url": "https://github.com/wcsmith/draft-quic-receive-ts/issues/2",
      "state": "OPEN",
      "author": "ianswett",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently timestamps must decrease in value as the packet numbers decrease in value, so if a packet with a lower packet number is received after a packet with a higher packet number, that timestamp can't be expressed in the frame.\r\n\r\nFor existing CC algorithms which use timestamps, it's believed this is ok, but it'd be good to confirm that design decision.",
      "createdAt": "2021-11-06T19:42:08Z",
      "updatedAt": "2021-11-06T19:42:08Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDOGIUVps5PWaMm",
      "title": "Is this draft aborted?",
      "url": "https://github.com/wcsmith/draft-quic-receive-ts/issues/3",
      "state": "CLOSED",
      "author": "MrJia1997",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Hi there, I wonder if this draft is aborted, since the current revision has expired. If yes, then what's the reason?",
      "createdAt": "2022-08-08T03:29:30Z",
      "updatedAt": "2025-03-02T20:11:02Z",
      "closedAt": "2025-03-02T20:11:02Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "COLLABORATOR",
          "body": "This is being used by a Google internal project, but it's not actively being worked on besides that.  Christian also has a timestamp draft that has not been adopted, and it's unclear to me what the working group wants to do about timestamps.\r\n\r\nIs this something you're using or would like to use?",
          "createdAt": "2022-08-08T16:01:39Z",
          "updatedAt": "2022-08-08T16:01:39Z"
        },
        {
          "author": "MrJia1997",
          "authorAssociation": "NONE",
          "body": "Yeah. I'm trying to optimize CC algorithm for QUIC, and one-way delay measurement will enable me a better queueing and jitter detection. I've checked out Christian's draft too, but, IMHO, the encoding efficiency of TIMESTAMP frame doesn't look really good, since only one receive timestamp is carried per ack frame. Though handling reordered packets might be tough in this draft, it looks more promising for me to encode packet timestamps in a much more compact way.",
          "createdAt": "2022-08-08T16:37:30Z",
          "updatedAt": "2022-08-08T16:37:30Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "COLLABORATOR",
          "body": "This draft now has a new author, and there's renewed interest, so activity should resume and hopefully we'll get it adopted by the QUIC WG in the near future.",
          "createdAt": "2025-03-02T20:10:44Z",
          "updatedAt": "2025-03-02T20:10:44Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOGIUVps6sYVnI",
      "title": "Extended ACK frame with multiple optional fields vs. new ACK frame types for the different supported configurations?",
      "url": "https://github.com/wcsmith/draft-quic-receive-ts/issues/7",
      "state": "OPEN",
      "author": "jbeshay",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Rather than adding two frame types to support receive timestamps with and without ECN counts, the latest iteration of the draft defines one frame type, ACK_EXTENDED, that can carry multiple optional sets of fields that correspond to different features.\n\nPro:\nOnly one frame is needed to support the different combinations of all supported ack-related features or versions of them. Without the extended ack frame, supporting different combinations of all the supported features/versions would require an exponentially increasing number of frames as new features are introduced. Or at least linearly, if each new feature/version introduces a frame that includes the union of all existing features.\n\nCon:\nThe ack extended frame contains a field whose bit-wise values indicate which features/versions of features are included in the frame. This requires a new IANA registry to track which bits maps to which features. If the number of ack-related features is small, the overhead of having an IANA registry will be higher than the additional frame types. There are only three sets of optional fields defined or proposed that I am aware of: ECN counts (rfc9000), receive timestamps (this draft), and timestamps for one way delay (https://datatracker.ietf.org/doc/draft-huitema-quic-ts/)\n\nDoes avoiding the potential of increasing frame types justify the IANA overhead? Do we expect to see more extensions that add ACK fields? \n\nDepending on the discussion, we can: \n1. Maintain the ACK_EXTENDED frame approach that can supports this and future extensions.\n2. Use separate ACK_RECEIVE_TIMESTAMPS and ACK_ECN_RECEIVETIMESTAMPS frames to carry the two additional combinations of features we currently need. \n2. Use one ACK_RECEIVE_TIMESTAMPS frame that can optionally carry the ECN counts and/or receive timestamps fields, without being extensible to new features, to avoid the IANA overhead.",
      "createdAt": "2025-03-03T19:03:00Z",
      "updatedAt": "2025-03-03T19:26:01Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOGIUVps4sd4RB",
      "title": "Add first draft of quic-receive-ts.",
      "url": "https://github.com/wcsmith/draft-quic-receive-ts/pull/1",
      "state": "MERGED",
      "author": "wcsmith",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-29T18:17:01Z",
      "updatedAt": "2021-10-24T21:00:18Z",
      "baseRepository": "wcsmith/draft-quic-receive-ts",
      "baseRefName": "main",
      "baseRefOid": "594d208dfe440ade8877341d6a2423aea0d731c6",
      "headRepository": "wcsmith/draft-quic-receive-ts",
      "headRefName": "firstdraft",
      "headRefOid": "c35a7ae55655d6c5ae0aedd444f610b51e30e5a2",
      "closedAt": "2021-10-24T21:00:18Z",
      "mergedAt": "2021-10-24T21:00:18Z",
      "mergedBy": "wcsmith",
      "mergeCommit": {
        "oid": "7c46f57af75d21bc087d19aa760922de40c5a018"
      },
      "comments": [
        {
          "author": "wcsmith",
          "authorAssociation": "OWNER",
          "body": "Ready for review",
          "createdAt": "2021-10-23T22:35:57Z",
          "updatedAt": "2021-10-23T22:35:57Z"
        },
        {
          "author": "wcsmith",
          "authorAssociation": "OWNER",
          "body": "> One small suggestion, but LG.\r\n> \r\n> You're right, my other comment was stale. I almost completed a review a few weeks ago and apparently never sent it :(\r\n\r\nSorry I also realized too late that I probably shouldn't have forced pushed an update to a PR :).",
          "createdAt": "2021-10-24T20:59:08Z",
          "updatedAt": "2021-10-24T20:59:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOGIUVps4u743O",
          "commit": {
            "abbreviatedOid": "801a062"
          },
          "author": "wcsmith",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-23T22:39:16Z",
          "updatedAt": "2021-10-23T22:39:16Z",
          "comments": [
            {
              "originalPosition": 165,
              "body": "Does it make sense to drop the wrapping 32-bit epoch for the initial timestamp delta? The interaction with the exponent is a little weird; e.g. if you have exponent = 0, you'll dip into eight-byte deltas occasionally anyway (with the 2 bit varint addition). I noticed that Christian's timestamp doesn't do this, so wondering if you think it still makes sense now that we have varint and a timestamp exponent.",
              "createdAt": "2021-10-23T22:39:16Z",
              "updatedAt": "2021-10-23T22:39:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOGIUVps4tunhv",
          "commit": {
            "abbreviatedOid": "91b46ba"
          },
          "author": "ianswett",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Some quick comments, but looks great.",
          "createdAt": "2021-09-29T21:14:26Z",
          "updatedAt": "2021-10-24T19:46:37Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nsupport for reporting multiple packet receive timestamps in QUIC ACK frames.\r\n```",
              "createdAt": "2021-09-29T21:14:26Z",
              "updatedAt": "2021-10-24T19:46:37Z"
            },
            {
              "originalPosition": 32,
              "body": "As discussed, my suggestion would be to make this something like:\r\n - send_timestamp_exponent = varint\r\n - max_received_timestamps = varint",
              "createdAt": "2021-09-29T21:16:06Z",
              "updatedAt": "2021-10-24T19:46:37Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-09-29T21:16:52Z",
              "updatedAt": "2021-10-24T19:46:38Z"
            },
            {
              "originalPosition": 95,
              "body": "I'm not sure I understand this format completely, could you add some more detail and/or more descriptive names?",
              "createdAt": "2021-09-29T21:19:17Z",
              "updatedAt": "2021-10-24T19:46:38Z"
            },
            {
              "originalPosition": 165,
              "body": "I'd be inclined to drop the wrapping.",
              "createdAt": "2021-10-24T19:46:15Z",
              "updatedAt": "2021-10-24T19:46:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOGIUVps4u8Qgv",
          "commit": {
            "abbreviatedOid": "8c210da"
          },
          "author": "wcsmith",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-24T20:05:24Z",
          "updatedAt": "2021-10-24T20:05:25Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I think these were from a much earlier version (maybe you started this comment a while ago?). I am looking at: https://wcsmith.github.io/draft-quic-receive-ts/firstdraft/draft-smith-quic-receive-ts.html . Let me know if it doesn't appear updated.",
              "createdAt": "2021-10-24T20:05:24Z",
              "updatedAt": "2021-10-24T20:05:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOGIUVps4u8Qg-",
          "commit": {
            "abbreviatedOid": "8c210da"
          },
          "author": "wcsmith",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-24T20:05:30Z",
          "updatedAt": "2021-10-24T20:05:30Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Same outdated",
              "createdAt": "2021-10-24T20:05:30Z",
              "updatedAt": "2021-10-24T20:05:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOGIUVps4u8Qsp",
          "commit": {
            "abbreviatedOid": "dada0c2"
          },
          "author": "wcsmith",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-24T20:14:25Z",
          "updatedAt": "2021-10-24T20:14:26Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "If this is for the current version: yes, I can definitely clarify. Can you check if you were commenting on the up-to-date version though? As I added descriptions for all fields, more explanation, etc.",
              "createdAt": "2021-10-24T20:14:26Z",
              "updatedAt": "2021-10-24T20:14:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOGIUVps4u8Qx2",
          "commit": {
            "abbreviatedOid": "dada0c2"
          },
          "author": "ianswett",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "One small suggestion, but LG.\r\n\r\nYou're right, my other comment was stale.  I almost completed a review a few weeks ago and apparently never sent it :(",
          "createdAt": "2021-10-24T20:18:26Z",
          "updatedAt": "2021-10-24T20:20:11Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "It seems like these are in descending order, correct?  If so, I'd say that here.",
              "createdAt": "2021-10-24T20:18:27Z",
              "updatedAt": "2021-10-24T20:20:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOGIUVps4u8Q0M",
          "commit": {
            "abbreviatedOid": "dada0c2"
          },
          "author": "ianswett",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-24T20:20:21Z",
          "updatedAt": "2021-10-24T20:20:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOGIUVps4u8RHE",
          "commit": {
            "abbreviatedOid": "a4912aa"
          },
          "author": "ianswett",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for the extra text!",
          "createdAt": "2021-10-24T20:35:30Z",
          "updatedAt": "2021-10-24T20:37:08Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nin descending sequential packet number (and descending timestamp) order. Timestamp Ranges\r\n```",
              "createdAt": "2021-10-24T20:35:30Z",
              "updatedAt": "2021-10-24T20:37:08Z"
            },
            {
              "originalPosition": 14,
              "body": "This LG for now, but I expect this design choice to get some discussion.",
              "createdAt": "2021-10-24T20:36:57Z",
              "updatedAt": "2021-10-24T20:37:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOGIUVps4u8RLH",
          "commit": {
            "abbreviatedOid": "c35a7ae"
          },
          "author": "wcsmith",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-24T20:38:41Z",
          "updatedAt": "2021-10-24T20:38:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Ack. Totally open to discussion (this was just modeled on the current behavior).",
              "createdAt": "2021-10-24T20:38:41Z",
              "updatedAt": "2021-10-24T20:38:41Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOGIUVps6M30sq",
      "title": "Expand the draft with a new ACK_EXTENDED frame that is more extensible and add new authors",
      "url": "https://github.com/wcsmith/draft-quic-receive-ts/pull/4",
      "state": "MERGED",
      "author": "jbeshay",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The existing ACK_RECEIVE_TIMESTAMP cannot carry ECN counts. Rather than adding more frame types for combinations of ack features, this PR uses a new frame type ACK_EXTENDED that can carry multiple sets of optional fields; ECN fields and receive timestamps fields in this draft.\r\n\r\nThis also adds new authors who have been using and extending the design of the proposal in the draft.",
      "createdAt": "2025-02-28T00:30:54Z",
      "updatedAt": "2025-03-03T19:19:01Z",
      "baseRepository": "wcsmith/draft-quic-receive-ts",
      "baseRefName": "main",
      "baseRefOid": "9f349a17af2b54adffd93cd6f6992e05186a5c96",
      "headRepository": "jbeshay/draft-quic-receive-ts",
      "headRefName": "ack_extended",
      "headRefOid": "36c4f7cc433f1b3b72f12798085424ec692277ce",
      "closedAt": "2025-03-03T19:18:54Z",
      "mergedAt": "2025-03-03T19:18:54Z",
      "mergedBy": "jbeshay",
      "mergeCommit": {
        "oid": "17df80d4e8a589dc394f08679e6c6f025d44bd7f"
      },
      "comments": [
        {
          "author": "jbeshay",
          "authorAssociation": "COLLABORATOR",
          "body": "Rebased on top of template updates.",
          "createdAt": "2025-02-28T22:39:17Z",
          "updatedAt": "2025-02-28T22:39:17Z"
        },
        {
          "author": "jbeshay",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed offline, the added complexity of negotiating the supported features and the need for an IANA registry may not be justified given that we don't expect many ack-related extensions that would need to be used concurrently. \r\n\r\nOne way to avoid the IANA requirement is to have one frame that can optionally carry receive timestamp and/or ecn counts but does not extend to other features.\r\n\r\nI will merge this change and continue the discussion about the best way to support the combination of ack-related features in a separate github issue (https://github.com/wcsmith/draft-quic-receive-ts/issues/7).",
          "createdAt": "2025-03-03T19:12:43Z",
          "updatedAt": "2025-03-03T19:12:43Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOGIUVps6eETsr",
          "commit": {
            "abbreviatedOid": "5b15dd9"
          },
          "author": "ianswett",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Mostly LG, though I'm not convinced this is a good way to go for extending the ACK frame.",
          "createdAt": "2025-02-28T23:06:36Z",
          "updatedAt": "2025-03-01T03:14:28Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I'm fine with adding everyone for now, but this is a lot of authors, so if it gets adopted, I suspect some people might be moved to the acknowledgements.",
              "createdAt": "2025-02-28T23:06:36Z",
              "updatedAt": "2025-03-01T03:14:28Z"
            },
            {
              "originalPosition": 177,
              "body": "```suggestion\r\nExtended Ack Features: A variable-length integer whose bit-wise\r\n```",
              "createdAt": "2025-02-28T23:12:35Z",
              "updatedAt": "2025-03-01T03:14:28Z"
            },
            {
              "originalPosition": 217,
              "body": "```suggestion\r\n  receive ACK_EXTENDED frames with the specified set of features. The bit-wise\r\n```",
              "createdAt": "2025-03-01T03:11:51Z",
              "updatedAt": "2025-03-01T03:14:28Z"
            },
            {
              "originalPosition": 221,
              "body": "if we go this direction, we'll likely need an IANA registry for this, which is somewhat annoying.",
              "createdAt": "2025-03-01T03:12:45Z",
              "updatedAt": "2025-03-01T03:14:28Z"
            },
            {
              "originalPosition": 277,
              "body": "```suggestion\r\nendpoints and to make the field more compact.\r\n```",
              "createdAt": "2025-03-01T03:13:59Z",
              "updatedAt": "2025-03-01T03:14:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOGIUVps6M_l0m",
      "title": "Update Github template",
      "url": "https://github.com/wcsmith/draft-quic-receive-ts/pull/5",
      "state": "MERGED",
      "author": "jbeshay",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Updates template using\r\n```\r\nmake update\r\nmake update-files\r\n```",
      "createdAt": "2025-02-28T22:29:45Z",
      "updatedAt": "2025-02-28T22:33:04Z",
      "baseRepository": "wcsmith/draft-quic-receive-ts",
      "baseRefName": "main",
      "baseRefOid": "4c353af6ee2dbc9edbce73ec27ac241c386cad61",
      "headRepository": "wcsmith/draft-quic-receive-ts",
      "headRefName": "jb/update_template",
      "headRefOid": "ffaedb2c715135a315c555e142e915184ea3de9f",
      "closedAt": "2025-02-28T22:33:03Z",
      "mergedAt": "2025-02-28T22:33:03Z",
      "mergedBy": "jbeshay",
      "mergeCommit": {
        "oid": "9f349a17af2b54adffd93cd6f6992e05186a5c96"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "PR_kwDOGIUVps6M_slU",
      "title": "Update Connor Smith's org affiliation to NVIDIA.",
      "url": "https://github.com/wcsmith/draft-quic-receive-ts/pull/6",
      "state": "MERGED",
      "author": "wcsmith",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-28T22:56:04Z",
      "updatedAt": "2025-02-28T23:28:46Z",
      "baseRepository": "wcsmith/draft-quic-receive-ts",
      "baseRefName": "main",
      "baseRefOid": "9f349a17af2b54adffd93cd6f6992e05186a5c96",
      "headRepository": "wcsmith/draft-quic-receive-ts",
      "headRefName": "wcsmith/update-author",
      "headRefOid": "3691219fd4b2d1959f9b94c8b5d7b51dc65ab472",
      "closedAt": "2025-02-28T23:28:45Z",
      "mergedAt": "2025-02-28T23:28:45Z",
      "mergedBy": "wcsmith",
      "mergeCommit": {
        "oid": "9c78fbace87032d57e75e403675bd1f453a21009"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOGIUVps6eESf4",
          "commit": {
            "abbreviatedOid": "3691219"
          },
          "author": "jbeshay",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T23:00:52Z",
          "updatedAt": "2025-02-28T23:00:52Z",
          "comments": []
        }
      ]
    }
  ]
}